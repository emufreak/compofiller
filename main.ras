program Compofiller;
@use "graphics"
@include "lsplayer_cia.inc"
@include "c2p.inc"
var  
	c2p1x1_5_c5_030_tempbuf : array[320*512/4] of byte;
	music: incbin("resources/music/terra-mesta4.lsmusic") chipmem;
	bank: incbin("resources/music/terra-mesta4.lsbank") chipmem;
   	curBuf, isDone, foamDone,colorcycled: integer = 0; 
   	curcopperpos: long = 0;
   	lightypos: integer = $3001;
   	screenOffset:long = 10240;
	foamCounter,mousereg,eff0Counter: integer = 0; 
   	yOffset: integer = 139;   	
 	imageRestoreCup : incbin("resources/images/restorecup.BPL") chipmem;
 	imagechunky : incbin("resources/images/cupempty.CHK");
 	image1 : incbin("resources/images/cupempty.BPL") chipmem;
 	image2 : incbin("resources/images/cupempty.BPL") chipmem;
   	//image1 : array[40*512*5] of byte chipmem;
 	//image2 : array[40*512*5] of byte chipmem;
	imageCupFull: incbin("resources/images/cupfull.BPL") chipmem; 	
	imageFoam: incbin("resources/images/foam.BPL") chipmem; 		
	imageMask: incbin("resources/images/mask.BPL") chipmem; 			
	image_palette : incbin("resources/images/cupempty.COP");
	image_palette_cycled : incbin("resources/images/cupemptycycle.COP");
	srcplaneoffset: integer = 0;
	screen,offscreen:long;		
	i,bltsize,musicPos,current,lButton,lButtonLast,rButton: integer = 0;
	beerinput: integer = 0;
	curbplmod: integer = $ffd8;
	istart: integer = 130;
	musicPosold: integer = 99;
	effectNumber: integer = 1;
	imagemask,blttarget,srcimage,bltapt,bltbpt:long;	
	sine4Copper : array[256] of integer = buildtable("386+(Math.sin(i/128*2*3.14)*1.02)*128");
    sine4CopperAdd : array[256] of integer = buildtable("(Math.sin(i/128*2*3.14)*0.102)*128");	
	row, tmp : integer = 1;
	tmp2 : long = 0;
	planeoffset : long = 0;
	
procedure CookieCut(cc_src:long,cc_dst:long,cc_mask:long,cc_size:integer);
begin
	WaitForBlitter();
	Poke32(#$dff000,$50,cc_mask); //BLTAPT
	Poke32(#$dff000,$4c,cc_src); //BLTBPT
	Poke32(#$dff000,$48,cc_dst); //BLTCPT	
	Poke32(#$dff000,$54,cc_dst); //BLTDPT		
	Poke16(#$dff000,$40,#$fca); //BLTCON0	
	Poke16(#$dff000,$58,cc_size); //BLTSIZE*/
	//All Channels / Cookie Cut
end;


procedure DistortCopperLine();
begin
	asm("
	moveq.l #0,d1
	move.w i,d1          ; Loadvar regular end
	moveq.l #0,d2
	move.w  row,d2 
	; Array is integer, so multiply with 2
	add.w d1,d1
	lea sine4Copper,a0             ; LoadVariable:: is array
	move.w (a0,d1),d0             ; LoadVariable:: is array
	; Store variable : current
	lsr.w #$8,d0 ; Optimization: simple A := A op Const MUL DIV SHR etc
	cmp.w #$1,d0
	bls c_eblock39
c_ctb38: ;Main true block ;keep 
	move.l d6,(a5)+
	move.l d5,(a5)+
	cmp.w d7,d2
	bne c_edblock91
c_ctb89: ;Main true block ;keep 
	move.l a3,(a5)+
c_edblock91
	add.w #$100,d2 ; Optimization: simple A := A op Const ADD SUB OR AND
	move.w d2,(a5)+
	move.w #$fffe,(a5)+
	move.l d4,(a5)+
	move.l d3,(a5)+
	cmp.w d7,d2
	bne c_edblock97
c_ctb95: ;Main true block ;keep 
	move.l a3,(a5)+
c_edblock97
	bra.s c_edblock40
c_eblock39
	cmp.w #$0,d0
	bls c_eblock103
c_ctb102: ;Main true block ;keep 
	move.l d6,(a5)+
	move.l d5,(a5)+
	cmp.w d7,d2
	bne c_edblock123
c_ctb121: ;Main true block ;keep 
	move.l a3,(a5)+
c_edblock123
	move.w #$0,curbplmod ; Simple a:=b optimization 
	bra.s c_edblock104
c_eblock103
	move.l a6,(a5)+
	move.l a4,(a5)+
	cmp.w d7,d2
	bne c_edblock130
c_ctb128: ;Main true block ;keep 
	move.l a3,(a5)+

c_edblock130
c_edblock104
c_edblock40
	cmp.w #$fe,i
	bhs c_eblock135
c_ctb134: ;Main true block ;keep 
	add.w #$1,i ; Optimization: simple A := A op Const ADD SUB OR AND
	bra.s c_edblock136
c_eblock135
	move.w #$0,i ; Simple a:=b optimization 
c_edblock136
	move.w d2,row
	rts
	");	
end;

procedure ColorCycle();
begin
	colorcycled := 1;
	asm("
	move.l	a5,curcopperpos
	");
	memcpy(#image_palette_cycled,0,curcopperpos,0,31,4);
	asm("
	add.l #128,a5
	");
end;

procedure ColorCycleRestore();
begin
	colorcycled := 2;
	asm("
	move.l	a5,curcopperpos
	");
	memcpy(#image_palette,0,curcopperpos,0,31,4);
	asm("
	add.l #128,a5
	");
end;

procedure CopperEffects();
begin	
	i := istart;
	row := $2c01;
	asm("
		moveq.l #0,d7
		move.w #$ff01,d7	
		move.l #$1080000,d6
		move.l #$10a0000,d5
		move.l #$108ffd8,d4
		move.l #$10affd8,d3
		move.l #$1080028,a6
		move.l #$10a0028,a4
		move.l #$ffdffffe,a3
	");
	
	InitCustomCopperList();	
	while row<=lightypos do 
	begin
		addcoppercommand(row,COPPER_WAIT_FOR_RASTER);
		if (beerinput > 0) then DistortCopperLine();
		row := row + $100;
	end;
	if(effectNumber = 6) then
	begin
		addcoppercommand(row,COPPER_WAIT_FOR_RASTER);		
		if (beerinput > 0) then DistortCopperLine();		
		ColorCycle();
		row := row + $100;
	end;
	while row<=lightypos+$1000 do 
	begin
		addcoppercommand(row,COPPER_WAIT_FOR_RASTER);
		if (beerinput > 0) then DistortCopperLine();
		row := row + $100;
	end;
	if(effectNumber = 6) then
	begin
		addcoppercommand(row,COPPER_WAIT_FOR_RASTER);		
		ColorCycleRestore();
		if (beerinput > 0) then DistortCopperLine();
		row := row + $100;
	end;
	while row>=$2c01 do 
	begin				
		addcoppercommand(row,COPPER_WAIT_FOR_RASTER);
		if (beerinput > 0) then DistortCopperLine();
		row := row + $100;	
	end;
	while row<$2c01 do 
	begin
		addcoppercommand(row,COPPER_WAIT_FOR_RASTER);
		if (beerinput > 0) then DistortCopperLine();
		row := row + $100;		
	end;
	addcoppercommand($ffff,$fffe);
	if (istart<255) then
		istart := istart + 1
	else
		istart := 0;
	//Poke16(#$dff180,0,$000);			

end;

procedure DistortMore();
begin
	for i:=0 to 255 do
	begin
		sine4Copper[i] := sine4Copper[i] + sine4CopperAdd[i];
	end;
end;
	
procedure BeerFoam(bf_dstimage:long;foamsize,foampos:integer;);
begin
	//ablit description:	
// - SrcImage 
// - DstImage
// - SrcShiftBytes: Start Byte to Blit From
// - XOffset: X Offset in Bytes (8 Pixel) to Blit To
// - YOffset: YOffset to Blit to
// - BlitWidth: With in Bytes of the Blit
// - BlitSize: Complete Size of the Blit
// - BlitAmod
// - BlitDmod
// - BlitB + BlitCmod
// - Channels and Minterm
	srcimage := #imageFoam;
	imagemask := #imageMask;
	imagemask := imagemask + 12 * (foampos-62);
	
	bf_dstimage := bf_dstimage + 14 + foampos*40;

	WaitForBlitter();				
	Poke32(#$dff000,$44,#$ffffffff); //BltAfwm+BltAlwm
	Poke16(#$dff000,$60,28); //BLTCMOD
	Poke16(#$dff000,$62,0); //BLTBMOD
	Poke16(#$dff000,$64,0); //BLTAMOD
	Poke16(#$dff000,$66,28); //BLTDMOD		
	Poke16(#$dff000,$42,0); //BLTCON1		

	bltsize := foamsize<<6+6;	

	CookieCut(srcimage,bf_dstimage,imagemask,bltsize);
	srcimage := srcimage+228;
	bf_dstimage := bf_dstimage+22480; 
	CookieCut(srcimage,bf_dstimage,imagemask,bltsize);
	srcimage := srcimage+228;
	bf_dstimage := bf_dstimage+22480; 
	CookieCut(srcimage,bf_dstimage,imagemask,bltsize);
	srcimage := srcimage+228;
	bf_dstimage := bf_dstimage+22480; 
	CookieCut(srcimage,bf_dstimage,imagemask,bltsize);
	srcimage := srcimage+228;
	bf_dstimage := bf_dstimage+22480; 
	CookieCut(srcimage,bf_dstimage,imagemask,bltsize);
	
end;

procedure FillDrinkBeer(dstimage:pointer of byte,yoffset:integer,fd_srcimage:long,fd_srcimageoffset:long);
begin
//ablit description:	
// - SrcImage 
// - DstImage
// - SrcShiftBytes: Start Byte to Blit From
// - XOffset: X Offset in Bytes (8 Pixel) to Blit To
// - YOffset: YOffset to Blit to
// - BlitWidth: With in Bytes of the Blit
// - BlitSize: Complete Size of the Blit
// - BlitAmod
// - BlitDmod
// - BlitB + BlitCmod
// - Channels and Minterm
//	fd_srcimage := #imageCupFull;
	WaitForBlitter();
	ablit(fd_srcimage, dstimage, yoffset*12,14,yoffset+82,40,2<<6+6,0,28,0,$9f0);		
	fd_srcimage := fd_srcimage+fd_srcimageoffset;
	dstimage := dstimage+22480; 
	WaitForBlitter();
	ablit(fd_srcimage, dstimage, yoffset*12,14,yoffset+82,40,2<<6+6,0,28,0,$9f0);		
	fd_srcimage := fd_srcimage+fd_srcimageoffset;
	dstimage := dstimage+22480;
	WaitForBlitter();	
	ablit(fd_srcimage, dstimage, yoffset*12,14,yoffset+82,40,2<<6+6,0,28,0,$9f0);		
	fd_srcimage := fd_srcimage+fd_srcimageoffset;
	dstimage := dstimage+22480;
	WaitForBlitter();
	ablit(fd_srcimage, dstimage, yoffset*12,14,yoffset+82,40,2<<6+6,0,28,0,$9f0);		
	fd_srcimage := fd_srcimage+fd_srcimageoffset;
	dstimage := dstimage+22480;
	WaitForBlitter();	
	ablit(fd_srcimage, dstimage, yoffset*12,14,yoffset+82,40,2<<6+6,0,28,0,$9f0);		
end;

/*
	Flips rendering buffer and updates copper list & pointers
*/
procedure FlipBuffers();
begin
	if (curBuf=0) then begin
		screen:=#image1;
		screen:=screen+screenOffset;
		offscreen:=#image2;
		offscreen:=offscreen+screenOffset;
	end else begin
		screen:=#image2;
		screen:=screen+screenOffset;
		offscreen:=#image1;
		offscreen:=offscreen+screenOffset;
	end;
	
	SetCopperList32(offscreen,#copper_bitplane0);
	SetCopperList32(offscreen+22480,#copper_bitplane1);
	SetCopperList32(offscreen+22480*2,#copper_bitplane2);
	SetCopperList32(offscreen+22480*3,#copper_bitplane3);
	SetCopperList32(offscreen+22480*4,#copper_bitplane4);

	curBuf:=(curBuf+1)&1;

end;

procedure RemoveFoam(rf_dstimage:pointer of byte,rf_yoffset:integer);
begin
//ablit description:	
// - SrcImage 
// - DstImage
// - SrcShiftBytes: Start Byte to Blit From
// - XOffset: X Offset in Bytes (8 Pixel) to Blit To
// - YOffset: YOffset to Blit to
// - BlitWidth: With in Bytes of the Blit
// - BlitSize: Complete Size of the Blit
// - BlitAmod
// - BlitDmod
// - BlitB + BlitCmod
// - Channels and Minterm
	
	if (rf_yoffset > 148) then
	begin
		rf_yoffset := 148
	end;
	
	srcimage := #imageRestoreCup; 
	WaitForBlitter();
	ablit(srcimage, rf_dstimage,rf_yoffset*12,14,rf_yoffset+62,40,5<<6+6,0,28,0,$9f0);	
	srcimage := srcimage+1944;
	rf_dstimage := rf_dstimage+22480; 
	WaitForBlitter();
	ablit(srcimage, rf_dstimage,rf_yoffset*12,14,rf_yoffset+62,40,5<<6+6,0,28,0,$9f0);		
	srcimage := srcimage+1944;
	rf_dstimage := rf_dstimage+22480;
	WaitForBlitter();
	ablit(srcimage, rf_dstimage,rf_yoffset*12,14,rf_yoffset+62,40,5<<6+6,0,28,0,$9f0);		
	srcimage := srcimage+1944;
	rf_dstimage := rf_dstimage+22480;
	WaitForBlitter();
	ablit(srcimage, rf_dstimage,rf_yoffset*12,14,rf_yoffset+62,40,5<<6+6,0,28,0,$9f0);		
	srcimage := srcimage+1944;
	rf_dstimage := rf_dstimage+22480;
	WaitForBlitter();
	ablit(srcimage, rf_dstimage,rf_yoffset*12,14,rf_yoffset+62,40,5<<6+6,0,28,0,$9f0);		
end;

procedure EffBeerFoam();
begin
	foamCounter:=foamCounter+1;
	BeerFoam(screen,foamCounter,215-foamCounter);
end;

procedure EffBeerFill();
begin
	FillDrinkBeer(screen,yOffset, #imageCupFull,1692);
	if(yOffset >= 1) then
	begin
		yOffset:=yOffset-1;
		foamCounter:=foamCounter+1;
	end;
		
	if(foamCounter <= 19) then 
		BeerFoam(screen,foamCounter,216-foamCounter)
	else 
		BeerFoam(screen,19,216-foamCounter);
end;

procedure EffBeerDrink();
begin
	RemoveFoam(screen,yOffset);	

	if(foamCounter <= 19) then 
		BeerFoam(screen,foamCounter,216-foamCounter)
	else 
		BeerFoam(screen,19,216-foamCounter);
end;

procedure EffScrollup();
begin
	screenOffset := screenOffset - 40;	
end;

procedure EffScrolldown();
begin
	screenOffset := screenOffset + 40;	
end;

procedure RestoreCup(rc_srcimage,rc_dstimage:long,rc_yoffset:integer,rc_height:long);
begin
//ablit description:	
// - SrcImage 
// - DstImage
// - SrcShiftBytes: Start Byte to Blit From
// - XOffset: X Offset in Bytes (8 Pixel) to Blit To
// - YOffset: YOffset to Blit to
// - BlitWidth: With in Bytes of the Blit
// - BlitSize: Complete Size of the Blit
// - BlitAmod
// - BlitDmod
// - BlitB + BlitCmod
// - Channels and Minterm

	srcimage := rc_srcimage;
	planeoffset := 12*rc_height;
	bltsize := (rc_height << 6) + 6;
	WaitForBlitter();
	ablit(srcimage, rc_dstimage,0,14,rc_yoffset,40,bltsize,0,28,0,$9f0);	
	srcimage := srcimage+planeoffset;
	rc_dstimage := rc_dstimage+22480; 
	WaitForBlitter();
	ablit(srcimage, rc_dstimage,0,14,rc_yoffset,40,bltsize,0,28,0,$9f0);		
	srcimage := srcimage+planeoffset;
	rc_dstimage := rc_dstimage+22480;
	WaitForBlitter();
	ablit(srcimage, rc_dstimage,0,14,rc_yoffset,40,bltsize,0,28,0,$9f0);		
	srcimage := srcimage+planeoffset;
	rc_dstimage := rc_dstimage+22480;
	WaitForBlitter();
	ablit(srcimage, rc_dstimage,0,14,rc_yoffset,40,bltsize,0,28,0,$9f0);		
	srcimage := srcimage+planeoffset;
	rc_dstimage := rc_dstimage+22480;
	WaitForBlitter();
	ablit(srcimage, rc_dstimage,0,14,rc_yoffset,40,bltsize,0,28,0,$9f0);		
end;

Procedure Get_Musicpos();
begin
	asm("
		move.w	(LSP_State+m_currentSeq)(pc),musicPos
	");
end;

Procedure Get_LeftMouseButton();
begin
	asm("	
		move.w	  #0, lButton	
		btst      #6, $BFE001 		  
		bne.s 	  notclicked
		move.w	  #1, lButton
		notclicked:");
end;

Procedure Get_RightMouseButton();
begin
	asm("		
		move.w	  #0, rButton	
		btst	  #10, $DFF016		  
		bne.s 	  notclicked
		move.w	  #1, rButton
		notclicked:");
 
end;

begin	
	curcopperpos := 0;
	LSP_CIAStart(#music,#bank,0,0);
	Load_c2p();	
    c2p_convert(#imagechunky, #image1);

	Graphics::SetupNonInterlacedScreen(#image1,5);
	FlipBuffers();
	memcpy(#image_palette,0,#copper_palette,0,31,4);

	while (isDone=0) do begin				

		WaitVerticalBlank();	
		colorcycled := 0;	

		FlipBuffers();	
		Get_Musicpos();
		case (effectNumber) of
			1: begin				
				eff0Counter := eff0Counter + 1;
				if(eff0Counter >= 30) then effectNumber := 2;
			end;
			2: begin							
				if (foamCounter <= 12) then	EffBeerFoam() else effectNumber := 3;
				CopperEffects();
			   end;	
			3: begin
				EffBeerFill();
				if (musicPos = $4) then effectNumber := 4;
				CopperEffects();
			   end;	   
			4: begin
			   	if (screenOffset > 0) then EffScrollup() else effectNumber := 5;
				CopperEffects();
				tmp := 0;
			   end;
			5: begin
				if ((musicPos = $8 or musicPos = $20) or musicPos = $38) then effectNumber := 6;
				if( tmp < 2) then
				begin
					RestoreCup(#imageCupFull,screen,338,141);
					tmp2 := screen + 10240;
					BeerFoam(tmp2,19,64);
				end;
				tmp := tmp + 1;
				CopperEffects();
			   end;   
			6: begin				
				CopperEffects();
				if(lightypos <= $8901) then 
					lightypos := lightypos + $100
				else
					lightypos := $3001;
			   	if ((musicPos = $10 or musicPos = $28) or musicPos = $40) then effectNumber :=7;
			   end;
			7: begin
				CopperEffects();
			   	if (screenOffset < 10240) then EffScrolldown() 
			   	else
			   	begin 
					effectNumber := 8;
			   	end;			   
			   end;	
			8: begin
			   	if ((musicPos = $18 or musicPos = $2c) or musicPos = 0 ) then effectNumber :=9;			   
			   	CopperEffects();			   									
			   end;	
  			9: begin
				if (foamCounter > 1) then
				begin
					EffBeerDrink();
					foamCounter:=foamCounter-1;
					yOffset:=yOffset+1;
				end
				else
				begin
					RestoreCup(#imageRestoreCup,screen,61,162);
				   	if ((musicPos = $1c or musicPos = $30) or musicPos = $4) then effectNumber :=10;
				end;
				CopperEffects();
			   end;   
			10: begin 
				beerinput := beerinput + 1;						
				DistortMore();
				eff0Counter := 0;
				effectNumber := 4;
				foamCounter := 151;
				yOffset := 1;
			   end;					   
		end;			
	end;
end.



